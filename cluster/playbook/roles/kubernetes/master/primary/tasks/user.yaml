---
- name: Use master_ip as advertise_address when using private ip for external access
  set_fact:
    advertise_address: "{{ master_ip }}"
  when: (use_private_ip_for_external_access | default(false))

- name: Use default_network_ip as advertise_address when using public ip for external access
  set_fact:
    advertise_address: "{{ default_network_ip }}"
  when: not (use_private_ip_for_external_access | default(false))

- name: "Create kubeadm-config"
  shell:
    cmd: |
      kubectl get cm -n kube-system kubeadm-config -o jsonpath="{.data.ClusterConfiguration}" > {{ kubeconfig_path }}kubeadm-config.yaml
    creates: "{{ kubeconfig_path }}kubeadm-config.yaml"

- name: "Create additional user {{ host_user }}"
  shell:
    cmd: |
      kubeadm kubeconfig user --client-name {{ host_user }} --config {{ kubeconfig_path }}kubeadm-config.yaml > {{ kubeconfig_path }}{{ host_user }}.conf
    creates: "{{ kubeconfig_path }}{{ host_user }}.conf"

- name: Get an existing Service object
  k8s_info:
    api_version: v1
    kind: ClusterRoleBinding
    name: "{{ host_user }}-cluster-admin"
    field_selectors:
      - resources
  register: user_cluster_admin

- name: "Provide necessary permission for {{ host_user }}"
  shell: |
    kubectl \
    create clusterrolebinding {{ host_user }}-cluster-admin \
    --kubeconfig {{ kubeadmin_config }} \
    --clusterrole={{ additional_user.cluster_role }} \
    --user={{ host_user }}
  when: (user_cluster_admin.resources|length == 0)

- name: Create ~/.kube/configs directory
  become: false
  delegate_to: 127.0.0.1
  file:
    path: "{{ kube_configs_dir }}"
    state: directory
    mode: 0740

- name: "Copy {{ host_user }} to host machine ~/.kube/configs"
  fetch:
    src: "{{ kubeconfig_path }}{{ host_user }}.conf"
    dest: "{{ kube_configs_dir }}/{{ host_user }}-{{ cluster_name }}.conf"
    flat: true
